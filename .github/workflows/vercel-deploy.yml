name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  REACT_APP_ROOT_API: ${{ vars.REACT_APP_ROOT_API }}
  REACT_APP_MENS_TOPS_SLUG: ${{ vars.REACT_APP_MENS_TOPS_SLUG }}
  REACT_APP_MENS_BOTTOMS_SLUG: ${{ vars.REACT_APP_MENS_BOTTOMS_SLUG }}
  REACT_APP_MENS_FOOTWARES_SLUG: ${{ vars.REACT_APP_MENS_FOOTWARES_SLUG }}
  REACT_APP_MENS_HEADWARES_SLUG: ${{ vars.REACT_APP_MENS_HEADWARES_SLUG }}
  REACT_APP_MENS_ACCESSORIES_SLUG: ${{ vars.REACT_APP_MENS_ACCESSORIES_SLUG }}
  REACT_APP_API_KEY: ${{ vars.REACT_APP_API_KEY }}
  REACT_APP_AUTH_DOMAIN: ${{ vars.REACT_APP_AUTH_DOMAIN }}
  REACT_APP_PROJECT_ID: ${{ vars.REACT_APP_PROJECT_ID }}
  REACT_APP_STORAGE_BUCKET: ${{ vars.REACT_APP_STORAGE_BUCKET }}
  REACT_APP_MESSAGING_SENDER_ID: ${{ vars.REACT_APP_MESSAGING_SENDER_ID }}
  REACT_APP_APP_ID: ${{ vars.REACT_APP_APP_ID }}

on:
  push:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
